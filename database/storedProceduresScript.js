const prismaClient = require('../prismaClient')
const { prisma } = prismaClient
const createOrReplaceProcedures = async () => {
	const SQLQuery_8fb1a3e8_1c66_4803_b1c6_36c5574b45a8_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_8fb1a3e8_1c66_4803_b1c6_36c5574b45a8;`
	const SQLQuery_8fb1a3e8_1c66_4803_b1c6_36c5574b45a8_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_8fb1a3e8_1c66_4803_b1c6_36c5574b45a8(inputresponseResponseid character varying) RETURNS  SETOF "Users" AS $$ BEGIN RETURN QUERY UPDATE "Users" SET "codeTimestamp" = null,"verificationCode" = null WHERE "id" = CAST (inputresponseResponseid AS text) RETURNING *;   END; $$ LANGUAGE plpgsql;`
	const SQLQuery_741d9141_7c80_443e_a9ac_c2ae53ef17d9_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_741d9141_7c80_443e_a9ac_c2ae53ef17d9;`
	const SQLQuery_741d9141_7c80_443e_a9ac_c2ae53ef17d9_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_741d9141_7c80_443e_a9ac_c2ae53ef17d9(paramsqueryq character varying,inputlimit character varying,inputoffset character varying) RETURNS  TABLE (TAVA_id text,TAVA_tavaBookingId varchar,TAVA_providerBookingId varchar,TAVA_pnr varchar,TAVA_status varchar,TAVA_provider varchar,TAVA_userEmail varchar,TAVA_paymentSessionId varchar,TAVA_paymentStatus varchar,TAVA_paymentId varchar,TAVA_orderType varchar,TAVA_bookingJSON json,TAVA_ticketingJSON json,TAVA_ticketingStatus varchar,TAVA_cancelationStatus varchar,TAVA_createdAt timestamp,TAVA_updatedAt timestamp,TAVA_corelationId varchar,TAVA_travelerEmail varchar) as $$ BEGIN RETURN QUERY SELECT * FROM "Booking" WHERE "status" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "tavaBookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "providerBookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "pnr" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "provider" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentSessionId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "orderType" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "ticketingStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "cancelationStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' ORDER BY "createdAt" DESC LIMIT CAST (inputlimit AS integer) OFFSET CAST (inputoffset AS integer);  END; $$ LANGUAGE plpgsql;`
	const SQLQuery_9464618a_8925_4746_821a_437d1ba47dee_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_9464618a_8925_4746_821a_437d1ba47dee;`
	const SQLQuery_9464618a_8925_4746_821a_437d1ba47dee_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_9464618a_8925_4746_821a_437d1ba47dee(paramsqueryq character varying,paramsqueryuserEmail character varying,inputlimit character varying,inputoffset character varying) RETURNS  TABLE (TAVA_id text,TAVA_tavaBookingId varchar,TAVA_providerBookingId varchar,TAVA_pnr varchar,TAVA_status varchar,TAVA_provider varchar,TAVA_userEmail varchar,TAVA_paymentSessionId varchar,TAVA_paymentStatus varchar,TAVA_paymentId varchar,TAVA_orderType varchar,TAVA_bookingJSON json,TAVA_ticketingJSON json,TAVA_ticketingStatus varchar,TAVA_cancelationStatus varchar,TAVA_createdAt timestamp,TAVA_updatedAt timestamp,TAVA_corelationId varchar,TAVA_travelerEmail varchar) as $$ BEGIN RETURN QUERY SELECT * FROM "Booking" WHERE "status" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "tavaBookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "providerBookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "pnr" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "provider" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentSessionId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "orderType" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "ticketingStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "cancelationStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' AND "userEmail" = CAST (paramsqueryuserEmail AS character varying) ORDER BY "createdAt" DESC LIMIT CAST (inputlimit AS integer) OFFSET CAST (inputoffset AS integer);  END; $$ LANGUAGE plpgsql;`
	const SQLQuery_e16207b0_3dc9_4e55_b40e_9f3d0d223955_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_e16207b0_3dc9_4e55_b40e_9f3d0d223955;`
	const SQLQuery_e16207b0_3dc9_4e55_b40e_9f3d0d223955_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_e16207b0_3dc9_4e55_b40e_9f3d0d223955(paramsqueryq character varying,inputlimit character varying,inputoffset character varying) RETURNS  TABLE (TAVA_id varchar,TAVA_tavaBookingId varchar,TAVA_bookingStatus varchar,TAVA_bookingId varchar,TAVA_confirmationNo varchar,TAVA_bookingRefNo varchar,TAVA_invoiceNo varchar,TAVA_provider varchar,TAVA_paymentStatus varchar,TAVA_paymentId varchar,TAVA_paymentSessionId varchar,TAVA_bookingResJson json,TAVA_bookingReqJson json,TAVA_blockRoomResJson json,TAVA_blockRoomReqJson json,TAVA_userEmail varchar,TAVA_guestEmail varchar,TAVA_cancelationStatus varchar,TAVA_corelationId varchar,TAVA_createdAt timestamp,TAVA_updatedAt timestamp,TAVA_voucherExpiryDate varchar,TAVA_isVoucheredBooking bool) as $$ BEGIN RETURN QUERY SELECT * FROM "hotelBooking" WHERE "bookingStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "tavaBookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "bookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "confirmationNo" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "bookingRefNo" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "invoiceNo" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentSessionId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "corelationId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "provider" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "cancelationStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' ORDER BY "createdAt" DESC LIMIT CAST (inputlimit AS integer) OFFSET CAST (inputoffset AS integer);  END; $$ LANGUAGE plpgsql;`
	const SQLQuery_184fa27a_ae6a_4709_88ac_c6098e0811a7_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_184fa27a_ae6a_4709_88ac_c6098e0811a7;`
	const SQLQuery_184fa27a_ae6a_4709_88ac_c6098e0811a7_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_184fa27a_ae6a_4709_88ac_c6098e0811a7(paramsqueryq character varying,paramsqueryuserEmail character varying,inputlimit character varying,inputoffset character varying) RETURNS  TABLE (TAVA_id varchar,TAVA_tavaBookingId varchar,TAVA_bookingStatus varchar,TAVA_bookingId varchar,TAVA_confirmationNo varchar,TAVA_bookingRefNo varchar,TAVA_invoiceNo varchar,TAVA_provider varchar,TAVA_paymentStatus varchar,TAVA_paymentId varchar,TAVA_paymentSessionId varchar,TAVA_bookingResJson json,TAVA_bookingReqJson json,TAVA_blockRoomResJson json,TAVA_blockRoomReqJson json,TAVA_userEmail varchar,TAVA_guestEmail varchar,TAVA_cancelationStatus varchar,TAVA_corelationId varchar,TAVA_createdAt timestamp,TAVA_updatedAt timestamp,TAVA_voucherExpiryDate varchar,TAVA_isVoucheredBooking bool) as $$ BEGIN RETURN QUERY SELECT * FROM "hotelBooking" WHERE "bookingStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "tavaBookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "bookingId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "confirmationNo" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "bookingRefNo" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "invoiceNo" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentSessionId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "paymentId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "corelationId" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "provider" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' OR "cancelationStatus" ILIKE '%' || CAST (paramsqueryq AS character varying) || '%' AND "userEmail" = CAST (paramsqueryuserEmail AS character varying) ORDER BY "createdAt" DESC LIMIT CAST (inputlimit AS integer) OFFSET CAST (inputoffset AS integer);  END; $$ LANGUAGE plpgsql;`
	const SQLQuery_3c44637a_ebdc_4c96_a07b_98aaa37d396b_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_3c44637a_ebdc_4c96_a07b_98aaa37d396b;`
	const SQLQuery_3c44637a_ebdc_4c96_a07b_98aaa37d396b_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_3c44637a_ebdc_4c96_a07b_98aaa37d396b() RETURNS  TABLE (TAVA_id text,TAVA_code varchar,TAVA_description varchar,TAVA_type varchar,TAVA_value int4,TAVA_expireOn timestamptz,TAVA_startedFrom timestamptz,TAVA_totalCount int4,TAVA_consumedCount int4,TAVA_maxAmount numeric) as $$ BEGIN RETURN QUERY SELECT * FROM "promoCode" WHERE "expireOn" >= CURRENT_DATE AND "startedFrom" <= CURRENT_DATE AND "consumedCount" <= "totalCount";  END; $$ LANGUAGE plpgsql;`
	const SQLQuery_4d0fd114_9d26_4e72_b3e6_5a2f5d61c9c5_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_4d0fd114_9d26_4e72_b3e6_5a2f5d61c9c5;`
	const SQLQuery_4d0fd114_9d26_4e72_b3e6_5a2f5d61c9c5_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_4d0fd114_9d26_4e72_b3e6_5a2f5d61c9c5(inputquerykey character varying) RETURNS  TABLE (TAVA_id text,TAVA_destination varchar,TAVA_stateProvince varchar,TAVA_stateProvinceCode varchar,TAVA_country varchar,TAVA_countryCode varchar) as $$ BEGIN RETURN QUERY SELECT * FROM  "hotelCity"
WHERE "destination" ILIKE '%' || CAST (inputquerykey AS character varying) || '%' OR "country" ILIKE '%' || CAST (inputquerykey AS character varying) || '%';  END; $$ LANGUAGE plpgsql;`
	const SQLQuery_a6c14702_b616_41d5_b7cc_77cd6ddec290_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_a6c14702_b616_41d5_b7cc_77cd6ddec290;`
	const SQLQuery_a6c14702_b616_41d5_b7cc_77cd6ddec290_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_a6c14702_b616_41d5_b7cc_77cd6ddec290(paramsquerysearch character varying) RETURNS  TABLE (TAVA_id text,TAVA_corelationId varchar,TAVA_date varchar,TAVA_serviceType varchar,TAVA_logType varchar,TAVA_log json,TAVA_url varchar,TAVA_bookingId varchar) as $$ BEGIN RETURN QUERY SELECT * FROM "logging" WHERE LOWER("corelationId") LIKE '%' || LOWER(CAST (paramsquerysearch AS character varying)) || '%' OR LOWER("serviceType") LIKE '%' || LOWER(CAST (paramsquerysearch AS character varying)) || '%' OR LOWER("logType") LIKE '%' || LOWER(CAST (paramsquerysearch AS character varying)) || '%'  OR LOWER("url") LIKE '%' || LOWER(CAST (paramsquerysearch AS character varying)) || '%' ORDER BY "id";  END; $$ LANGUAGE plpgsql;`
	const SQLQuery_0e0f80fe_382e_4849_98f1_433c28d42558_drop_function =
		await prisma.$queryRaw`DROP FUNCTION IF EXISTS function_0e0f80fe_382e_4849_98f1_433c28d42558;`
	const SQLQuery_0e0f80fe_382e_4849_98f1_433c28d42558_create_function =
		await prisma.$queryRaw`CREATE OR REPLACE FUNCTION function_0e0f80fe_382e_4849_98f1_433c28d42558() RETURNS  TABLE (TAVA_id text,TAVA_corelationId varchar,TAVA_date varchar,TAVA_serviceType varchar,TAVA_logType varchar,TAVA_log json,TAVA_url varchar,TAVA_bookingId varchar) as $$ BEGIN RETURN QUERY SELECT * FROM "logging";  END; $$ LANGUAGE plpgsql;`
}
module.exports = { createOrReplaceProcedures }
